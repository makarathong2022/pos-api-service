// Code generated by sqlc. DO NOT EDIT.
// source: menu_item_detail.sql

package db

import (
	"context"
)

const createMenuItemDetail = `-- name: CreateMenuItemDetail :one
INSERT INTO tbl_menu_item_details (
    item_cd_detail,
    item_id,
    group_id,
    category_id,
    size_id,
    cost,
    price,
    vat_id,
    vat,
    terminal_id,
    outlet_id,
    printer_id
  )
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING id, item_cd_detail, item_id, group_id, category_id, size_id, cost, price, vat_id, vat, terminal_id, outlet_id, printer_id, created_at, updated_at, deleted_at
`

type CreateMenuItemDetailParams struct {
	ItemCdDetail int32  `json:"item_cd_detail"`
	ItemID       int32  `json:"item_id"`
	GroupID      int32  `json:"group_id"`
	CategoryID   int32  `json:"category_id"`
	SizeID       int32  `json:"size_id"`
	Cost         string `json:"cost"`
	Price        string `json:"price"`
	VatID        int32  `json:"vat_id"`
	Vat          string `json:"vat"`
	TerminalID   int32  `json:"terminal_id"`
	OutletID     int32  `json:"outlet_id"`
	PrinterID    int32  `json:"printer_id"`
}

func (q *Queries) CreateMenuItemDetail(ctx context.Context, arg CreateMenuItemDetailParams) (TblMenuItemDetail, error) {
	row := q.db.QueryRowContext(ctx, createMenuItemDetail,
		arg.ItemCdDetail,
		arg.ItemID,
		arg.GroupID,
		arg.CategoryID,
		arg.SizeID,
		arg.Cost,
		arg.Price,
		arg.VatID,
		arg.Vat,
		arg.TerminalID,
		arg.OutletID,
		arg.PrinterID,
	)
	var i TblMenuItemDetail
	err := row.Scan(
		&i.ID,
		&i.ItemCdDetail,
		&i.ItemID,
		&i.GroupID,
		&i.CategoryID,
		&i.SizeID,
		&i.Cost,
		&i.Price,
		&i.VatID,
		&i.Vat,
		&i.TerminalID,
		&i.OutletID,
		&i.PrinterID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
